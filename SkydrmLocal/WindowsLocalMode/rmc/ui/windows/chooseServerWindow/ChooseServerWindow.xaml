<Window x:Class="SkydrmLocal.rmc.ui.windows.ChooseServerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local_Model="clr-namespace:SkydrmLocal.rmc.ui.windows.chooseServerWindow.Model"
        xmlns:UserControl="clr-namespace:SkydrmLocal.rmc.ui.components"
        xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
        mc:Ignorable="d"
        Title="SkyDRM DESKTOP" Height="700" Width="1000" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <local_Model:ChooseServerForTextboxConverter x:Key="TextboxConver"/>
        <local_Model:ChooseServerForTextboxBackgroundConverter x:Key="TextboxBackgroudConver"/>
        <local_Model:ChooseServerForTextblockConverter x:Key="TextblockConver"/>
        <local_Model:ChooseServerForTextblockLabelConverter x:Key="TextblockLabelConver"/>
        <local_Model:ChooseServerForCheckboxConverter x:Key="CheckConver" />

        <!--for radiobutton-->
        <SolidColorBrush x:Key="CheckedColor">#000000</SolidColorBrush>
        <SolidColorBrush x:Key="UnCheckedColor">Transparent</SolidColorBrush>
        <SolidColorBrush x:Key="MouseOverColor">#0079D8</SolidColorBrush>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="Transparent" BorderThickness="0" >
                            <StackPanel Orientation="Horizontal">
                                <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                    <Ellipse x:Name="Border" Height="20" Width="20" Margin="2" Fill="Transparent" StrokeThickness="2" Stroke="#333333"/>
                                    <Ellipse x:Name="CheckArea" Margin="7" Fill="{DynamicResource CheckedColor}"/>
                                </Grid>
                                <TextBlock VerticalAlignment="Center" Margin="2,0,0,0" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="CheckArea" Property="Fill" Value="{DynamicResource CheckedColor}"/>
                                <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource MouseOverColor}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckArea" Property="Fill" Value="{DynamicResource UnCheckedColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource MouseOverColor}"/>
                                <Setter TargetName="CheckArea" Property="Fill" Value="{DynamicResource MouseOverColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="#4F4F4F"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator FlowDirection="LeftToRight" VerticalAlignment="Center">
                            <BulletDecorator.Bullet>
                                <Border x:Name="border"
                                            BorderThickness="2"
                                            BorderBrush="#333333"
                                            Width="20"
                                            Height="20"
                                            MinHeight="15"
                                            MinWidth="15"
                                            VerticalAlignment="Center">
                                    <Path x:Name="path" Width="12" Height="12" Stroke="#DADADA" StrokeThickness="2"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="8,0,0,0"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="path" Property="Data" Value="M 0,6 L 5,10 12,0"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter TargetName="border" Property="Background" Value="#0078D7"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#0078D7"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                                <Setter TargetName="border" Property="Background" Value="Black"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="4*"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="1" Grid.Row="0" FontSize="14" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left"><Run Text="Sign in to your account"/></TextBlock>

        <Image Grid.Column="1" Grid.Row="1" Source="/rmc/resources/icons/skydrm_desktop_logo.png"/>

        <Grid Grid.Column="1" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0.6*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <RadioButton x:Name="RadioCompany" FontFamily="Lato" FontSize="14px" FontStyle="Normal" Margin="0,5,20,5" HorizontalAlignment="Left" Checked="RadioBtn" Content="Company account"/>
                <RadioButton x:Name="RadioPerson" FontFamily="Lato" FontSize="14px" FontStyle="Normal" Margin="20,5,5,5" Checked="RadioBtn" Content="Personal account"/>
            </StackPanel>


            <TextBlock Grid.Row="1" FontSize="15" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding ServerModel, Converter={StaticResource TextblockLabelConver}}"/>


            <ComboBox Grid.Row="2" x:Name="mycombox" ItemsSource="{Binding UrlList}" 
                      DisplayMemberPath="listUrl"
                      IsEnabled="{Binding ServerModel, Converter={StaticResource TextboxConver}}"
                      Background="{Binding ServerModel, Converter={StaticResource TextboxBackgroudConver}}"
                      IsTextSearchEnabled="False" StaysOpenOnEdit="True" IsReadOnly="False" IsEditable="True"
                      TextBoxBase.TextChanged="Combox_TextChanged"
                      MaxDropDownHeight="70"
                      input:InputMethod.IsInputMethodEnabled="False"                     
                      VerticalContentAlignment="Center" FontSize="14" FontFamily="Raboto">
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsEnabled}" Value="false">
                                <Setter Property="Text" Value=""/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <TextBlock Grid.Row="2" Text="{Binding ServerModel, Converter={StaticResource TextblockConver}}"
                       Foreground="#BDBDBD" Margin="10,0,20,0"  IsHitTestVisible="False"  VerticalAlignment="Center" FontSize="14" FontFamily="Raboto">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=mycombox,Path=Text}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <!--<TextBox x:Name="TbxInput" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" FontSize="14" IsEnabled="{Binding ServerModel, Converter={StaticResource TextboxConver}}">
                <TextBox.Template>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Rectangle x:Name="rec"  Fill="{Binding ServerModel, Converter={StaticResource TextboxBackgroudConver}}" Opacity="0.8" Stroke="Gray"/>
                            <TextBlock x:Name="tbx_hint" Text="{Binding ServerModel, Converter={StaticResource TextblockConver}}" Foreground="#BDBDBD" Margin="2,0,0,0"
                                   VerticalAlignment="Center" Visibility="Visible"/>
                            <TextBox x:Name="tbx_content" Foreground="Black" Background="Transparent" VerticalAlignment="Center" VerticalContentAlignment="Center" BorderThickness="0"
                                 Text="{Binding Text, ElementName=TbxInput, Mode=TwoWay}" FontSize="12" Height="20" TextChanged="Tbx_content_TextChanged"/>
                        </Grid>
                        --><!--Control the visible and hide by controlTemplate Trigger.--><!--
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="tbx_content" Property="Text" Value="" >
                                <Setter TargetName="tbx_hint" Property="Visibility" Value="Visible"/>
                            </Trigger>

                            <Trigger SourceName="tbx_content" Property="IsFocused" Value="true">
                                <Setter TargetName="tbx_hint" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="rec"  Property="Stroke" Value="#F9E080"/>
                            </Trigger>

                            <Trigger SourceName="tbx_content" Property="IsMouseOver" Value="true">
                                <Setter TargetName="rec"  Property="Stroke" Value="#F9E080"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </TextBox.Template>
            </TextBox>-->

            <TextBlock Grid.Row="3" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding ServerModel, Converter={StaticResource CheckConver}}"><Run Text="You can change the URL"/></TextBlock>
           
        </Grid>

        <CheckBox x:Name="CheckRememberURL" Grid.Row="3" Grid.Column="1" Content="Remember URL" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="True" Visibility="{Binding ServerModel, Converter={StaticResource CheckConver}}"/>
        <StackPanel Grid.Row="4" Grid.Column="1">
            <Button x:Name="Next" Click="Next_Click" VerticalAlignment="Top" HorizontalAlignment="Center" Width="160" Style="{StaticResource UnifiedBtnStyle_Positive}" Content="Next"/>
            <TextBlock x:Name="Tb_CheckUrl" Text="Checking URL...." Visibility="Collapsed" Foreground="Black" Margin="0,10,0,0" />

        </StackPanel>
        <!--For  protect progress ui display -->
        <Grid x:Name="GridProBar" Grid.RowSpan="5" Grid.ColumnSpan="3" Background="LightGray" Opacity="0.5" Visibility="Collapsed">

            <!--For loading progress background-->
            <UserControl:ProBarComponent />

        </Grid>
    </Grid>

</Window>
