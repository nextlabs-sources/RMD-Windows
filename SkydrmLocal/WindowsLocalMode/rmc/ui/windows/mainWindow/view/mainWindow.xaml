<local:CustomMainWindow x:Class="SkydrmLocal.rmc.ui.windows.mainWindow.view.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:SkydrmLocal.rmc.ui.windows.mainWindow"
        xmlns:local_convert="clr-namespace:SkydrmLocal.rmc.ui.windows.mainWindow.helper.converter"
        xmlns:local_event="clr-namespace:SkydrmLocal.rmc.ui.windows.mainWindow.helper"
        xmlns:local_custom="clr-namespace:SkydrmLocal.rmc.ui.components"
        xmlns:ext="clr-namespace:SkydrmLocal.rmc.ui.components.sortListView"
        xmlns:list_view="clr-namespace:SkydrmLocal.rmc.ui.components.ListViewLayoutManagerLib"
        xmlns:Tree_View="clr-namespace:SkydrmLocal.rmc.ui.windows.mainWindow.treeViewComponent.view"
        xmlns:p="clr-namespace:SkydrmLocal.Properties"
        mc:Ignorable="d"
                        
        Height="{Binding Source={x:Static p:Settings.Default}, Path=Height, Mode=TwoWay}"
        Width="{Binding Source={x:Static p:Settings.Default}, Path=Width, Mode=TwoWay}"
        Left="{Binding Source={x:Static p:Settings.Default}, Path=Left, Mode=TwoWay}"
        Top="{Binding Source={x:Static p:Settings.Default}, Path=Top, Mode=TwoWay}"
        MinWidth="1000" MinHeight="600" 
        
        AllowDrop="True" Drop="Window_Drop"
        StateChanged="Window_StateChanged"
        BorderBrush="White" 
        WindowStartupLocation="CenterScreen" Icon="/Skydrm;component/AppICON.ico" Title="SkyDRM DESKTOP"
        >

    <!--Resource-->
    <Window.Resources>
        <local_convert:LocalFileStatus2ImageConverterEx x:Key="fti"/>
        <local_convert:SharedWithConverter x:Key="swc"/>
        <local_convert:SharedWithMoreConverter x:Key="swmc"/>
        <local_convert:Count2BoolConverter x:Key="c2bc"/>
        <local_convert:FileStatusEnum2Bool x:Key="fse2b"/>
        <local_convert:ListCount2BoolConverter x:Key="lc2b"/>
        <local_convert:NetworkStatusBool2StringInfo x:Key="nsb2s"/>
        <local_convert:NetworkStatusBool2ImageConverter x:Key="nsb2i"/>
        <local_convert:NetStatusBool2LineStatus x:Key="nsb2ls"/>
        <local_convert:NetStatusBool2LineColor x:Key="nsb2lc"/>
        <local_convert:ReadableFileSizeConverter x:Key="rfsc"/>
        <local_convert:ButtonUploadContentConverter x:Key="btnUploadContentConver"/>
        <local_convert:ButtonUploadTagConverter x:Key="btnUploadTagConver"/>
        <local_convert:ButtonUploadCommandParameterConverter x:Key="btnUploadCommandConver"/>
        <local_convert:MenuitemStartUploadStatusConverter x:Key="MenuitemStartUploadConver"/>
        <local_convert:MenuitemStopUploadStatusConverter x:Key="MenuitemStopUploadConver"/>
        <local_convert:MenuitemSelectFileStatusConverter x:Key="MenuitemSelectFileStatusConver"/>
        <local_convert:MenuitemRemoveFileStatusConverter x:Key="MenuitemRemoveFileStatusConver"/>
        <local_convert:ItemCountsConverter x:Key="ItemConver"></local_convert:ItemCountsConverter>
        <local_convert:DisplayVisibilityConverter x:Key="VisibilityConver"></local_convert:DisplayVisibilityConverter>
        <local_convert:DisplayGridWidthConverter x:Key="WidthConver"></local_convert:DisplayGridWidthConverter>
        <local_convert:DisplayContentNotDataConverter x:Key="ContentNotDataConver"></local_convert:DisplayContentNotDataConverter>
        <local_convert:UpdatingIconVisibilityConverter x:Key="UpdatingIconConver"></local_convert:UpdatingIconVisibilityConverter>
        <local_convert:EditedAndModifiedStausConverter x:Key="EditedAndModifiedStatusConver"></local_convert:EditedAndModifiedStausConverter>
        <local_convert:EditedAndModifiedTextConverter x:Key="EditedAndModifiedTextConver"></local_convert:EditedAndModifiedTextConverter>
        <local_convert:ListViewVisibilityConverter x:Key="ListViewVisibilityConver"></local_convert:ListViewVisibilityConverter>
        <local_convert:FilterListViewVisibilityConverter x:Key="FilterListVisibilityConver"></local_convert:FilterListViewVisibilityConverter>
        <local_convert:IsProjectShareBtnEnableConverter x:Key="ShareBtnIsEnableConver"></local_convert:IsProjectShareBtnEnableConverter>
        <local_convert:IsDisplayDateColumnContentConverter x:Key="IsDisplayDateColConver"></local_convert:IsDisplayDateColumnContentConverter>
        <local_convert:IsDisplayShareColumnContentConverter x:Key="IsDisplayShareColConver"></local_convert:IsDisplayShareColumnContentConverter>
        <local_convert:PromptTextVisibilityConverter x:Key="PromptVisibilityConver"></local_convert:PromptTextVisibilityConverter>
        <local_convert:PromptTextContentConverter x:Key="PromptTextConver"></local_convert:PromptTextContentConverter>
        <local_convert:SearchPromptTextVisibilityConverter x:Key="SearchPromptVisibilityConver"></local_convert:SearchPromptTextVisibilityConverter>
        <local_convert:DisplayLoadingPageConverter x:Key="LoadingPageConver"></local_convert:DisplayLoadingPageConverter>
        <local_convert:TimestampToDateTimeConverter x:Key="TimestampToDateTime"></local_convert:TimestampToDateTimeConverter>
	    <local_convert:NetworkStatusBool2VisibilityInfo x:Key="NeteWork2VisibilityConver"></local_convert:NetworkStatusBool2VisibilityInfo>
        <local_convert:DisplayProjectLixBoxConverter x:Key="DisplayProjectLixBoxConver"></local_convert:DisplayProjectLixBoxConverter>
        <local_convert:ProjectLixBoxGroupNameConverter x:Key="ProjectGroupNameConver"></local_convert:ProjectLixBoxGroupNameConverter>
        <local_convert:ProjectLixBoxGroupName2Converter x:Key="ProjectGroupName2Conver"></local_convert:ProjectLixBoxGroupName2Converter>
        <local_convert:EmptyFolderVisibilityConverter x:Key="EmptyFolderVisibilityConver"></local_convert:EmptyFolderVisibilityConverter>
        <local_convert:ProjectPageListNameConverter x:Key="ProjectPageListNameConver"></local_convert:ProjectPageListNameConverter>
        <local_convert:EmptyImageVisibilityConverter x:Key="EmptyImageVisibilityConver"></local_convert:EmptyImageVisibilityConverter>
        <local_convert:EmptyFolderTextConverter x:Key="EmptyFolderTextConver"></local_convert:EmptyFolderTextConverter>
        <local_convert:SearchComboxVisibilityConverter x:Key="SearchComboxVisibilityConver"></local_convert:SearchComboxVisibilityConverter>
        <local_convert:FileLocationConentConverter x:Key="FileLocationConentConverter"></local_convert:FileLocationConentConverter>
        <local_convert:MenuitemFileStatusNetworkMultiBindConverter x:Key="MenuitemFileStatusNetworkMultiBindConverter"></local_convert:MenuitemFileStatusNetworkMultiBindConverter>
        <!--for file downloading, upload failed, edited attach extra control converter-->
        <local_convert:SpecialFileStatus2SpVisibileConverter x:Key="SpecialStatusSpVisbileConver"></local_convert:SpecialFileStatus2SpVisibileConverter>
        <local_convert:SpecialFileStatus2ImageConverter x:Key="SpecialStatusImageConver"></local_convert:SpecialFileStatus2ImageConverter>
        <local_convert:SpecialFileStatus2TextConverter x:Key="SpecialStatusTextConver"></local_convert:SpecialFileStatus2TextConverter>
        <local_convert:FilterListSourcePathConverter x:Key="FilterListSourcePathConver"></local_convert:FilterListSourcePathConverter>
        
        <!--Data template for "Name" field-->
        <DataTemplate x:Key="nameTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="AUTO"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                
                <Image Grid.Column="0">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource fti}">
                            <!-- Binding INxlFile.Name-->
                            <Binding Path="Name" />
                            <!-- Binding INxlFile.FileStatus-->
                            <Binding Path="FileStatus" />
                            <Binding Path="IsFolder" />
                            <Binding Path="IsMarkedOffline" />
                        </MultiBinding>
                    </Image.Source>
                </Image>

                <Image Grid.Column="0" Width="20" Height="20" Stretch="None" Visibility="{Binding Path=FileStatus,Converter={StaticResource UpdatingIconConver}}" Source="/rmc/resources/icons/icon_downloading.png">
                    <Image.RenderTransform>
                        <TranslateTransform X="17" Y="11"></TranslateTransform>
                    </Image.RenderTransform>
                </Image>

                <DockPanel LastChildFill="True" Grid.Column="1">

                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,0,0">
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource SpecialStatusSpVisbileConver}">
                                <Binding Path="FileStatus"/>
                                <Binding Path="IsMarkedOffline"/>
                                <Binding Path="IsEdit"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                        
                        <Image Width="13" Height="13" Stretch="Fill" Margin="0,0,5,0">
                            <Image.Source>
                                <MultiBinding Converter="{StaticResource SpecialStatusImageConver}">
                                    <Binding Path="FileStatus"/>
                                    <Binding Path="IsMarkedOffline"/>
                                    <Binding Path="IsEdit"/>
                                </MultiBinding>
                            </Image.Source>
                        </Image>
                        <TextBlock Foreground="Gray" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource SpecialStatusTextConver}">
                                    <Binding Path="FileStatus"/>
                                    <Binding Path="IsMarkedOffline"/>
                                    <Binding Path="IsEdit"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                    
                    <!--<StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,0,0" Visibility="{Binding Path=FileStatus,Converter={StaticResource UpdatingIconConver}}">
                        <Image Width="13" Height="13" Stretch="Fill" Margin="0,0,5,0" Source="/rmc/resources/icons/icon_down_arrow.png" ></Image>
                        <TextBlock Foreground="Gray" Text="Updating..." FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Left"></TextBlock>
                    </StackPanel>

                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,0,0" Visibility="{Binding Path=FileStatus,Converter={StaticResource EditedAndModifiedStatusConver}}">
                        <Image Width="13" Height="13" Stretch="Fill" Margin="0,0,5,0" Source="/rmc/resources/icons/icon_yellow_rectangle.png" ></Image>
                        <TextBlock Foreground="Gray" Text="{Binding Path=FileStatus,Converter={StaticResource EditedAndModifiedTextConver}}" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Left"></TextBlock>
                    </StackPanel>-->
                    
                    <!--<Image Source="{Binding Path=LocalNxlFileStatus,Converter={StaticResource fti}}"/>-->
                    <TextBlock DockPanel.Dock="Top" Text="{Binding Path=Name}"  TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="10,0,0,0"/>

                </DockPanel>

                
            </Grid>
            
        </DataTemplate>

        <!--For FilterList Data template for "Name" field-->
        <DataTemplate x:Key="FilternameTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="AUTO"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource fti}">
                            <!-- Binding INxlFile.Name-->
                            <Binding Path="Name" />
                            <!-- Binding INxlFile.FileStatus-->
                            <Binding Path="FileStatus" />
                            <Binding Path="IsFolder" />
                            <Binding Path="IsMarkedOffline" />
                        </MultiBinding>
                    </Image.Source>
                </Image>

                <Image Grid.Column="0" Width="20" Height="20" Stretch="None" Visibility="Collapsed" Source="/rmc/resources/icons/icon_downloading.png">
                    <Image.RenderTransform>
                        <TranslateTransform X="13" Y="11"></TranslateTransform>
                    </Image.RenderTransform>
                </Image>

                <DockPanel LastChildFill="True" Grid.Column="1">

                    <TextBlock DockPanel.Dock="Bottom" Text="{Binding SourcePath}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="10,2,0,0" 
                               FontSize="11"  Foreground="Gray" Visibility="{Binding Path=Visibility, ElementName=sp_attach, Converter={StaticResource FilterListSourcePathConver}}"></TextBlock>

                    <StackPanel x:Name="sp_attach" DockPanel.Dock="Bottom" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,0,0">
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource SpecialStatusSpVisbileConver}">
                                <Binding Path="FileStatus"/>
                                <Binding Path="IsMarkedOffline"/>
                                <Binding Path="IsEdit"/>
                            </MultiBinding>
                        </StackPanel.Visibility>

                        <Image Width="13" Height="13" Stretch="Fill" Margin="0,0,5,0">
                            <Image.Source>
                                <MultiBinding Converter="{StaticResource SpecialStatusImageConver}">
                                    <Binding Path="FileStatus"/>
                                    <Binding Path="IsMarkedOffline"/>
                                    <Binding Path="IsEdit"/>
                                </MultiBinding>
                            </Image.Source>
                        </Image>
                        <TextBlock Foreground="Gray" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource SpecialStatusTextConver}">
                                    <Binding Path="FileStatus"/>
                                    <Binding Path="IsMarkedOffline"/>
                                    <Binding Path="IsEdit"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>

                    <TextBlock DockPanel.Dock="Top" Text="{Binding Path=Name}"  TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="10,0,0,0"/>

                </DockPanel>


            </Grid>

        </DataTemplate>

        <!--For ProjectPageList Data template for "Name" field-->
        <DataTemplate x:Key="ProjectPageNameTemplate">
            <Grid Height="30">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="AUTO"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Stretch="None" Source="{Binding ProjectInfo.BOwner,Converter={StaticResource ProjectPageListNameConver}}"></Image>

                <TextBlock Grid.Column="1" Text="{Binding Path=ProjectInfo.Name}"  TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="10,0,0,0"/>

            </Grid>

        </DataTemplate>

        <!--For ProjectPageList Data template for "Project Description" field-->
        <DataTemplate x:Key="ProjectPageDescriptionTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{Binding ProjectInfo.Description}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="0,0,0,5"/>

            </Grid>

        </DataTemplate>

        <!--For ProjectPageList Data template for "File Number" field-->
        <DataTemplate x:Key="ProjectPageFileNumberTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="AUTO"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" MinWidth="20" Text="{Binding FileNodes.Count}" TextAlignment="Right"></TextBlock>

                <TextBlock Grid.Column="1" Text="files" VerticalAlignment="Center" Margin="10,0,0,0"/>

            </Grid>

        </DataTemplate>

        <!--Data tempate for "SharedWith" field-->
        <DataTemplate x:Key="sharedWithTemplate">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Orientation="Horizontal">
                <!--Shared with-->
                <TextBlock x:Name="tb_shared" Text="{Binding Path=SharedWith, 
                    Converter={StaticResource swc}}" Padding="3"  HorizontalAlignment="Left"/>
                <!--More-->
                <TextBlock x:Name="tb_more" Text="{Binding Path=SharedWith, Converter={StaticResource swmc}}"
                          Padding="3" Foreground="White" FontSize="10" HorizontalAlignment="Right" Margin="0,0,5,0"
                          Visibility="Collapsed">
                    <TextBlock.Background>
                        <ImageBrush Stretch="Uniform" ImageSource="/rmc/resources/icons/Icon_Ellipse.png"  />
                    </TextBlock.Background>
                </TextBlock>
            </StackPanel>

            <!--Data Trigger-->
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding ElementName=tb_shared, Path=Text,
                    Converter={StaticResource c2bc}}" Value="true">
                    <Setter TargetName="tb_more" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>

        </DataTemplate>

        <!--MenuItem style-->
        <Style x:Key="MLB_MenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Height" Value="25"/>

            <!--<Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="Auto"  SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto"  SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>

                                <!-- Content for show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" 
                                                  Margin="4,0,6,0" x:Name="Icon" 
                                                  VerticalAlignment="Center" ContentSource="Icon"/>

                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" 
                                          Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>

                                <!-- Content for the menu text -->
                                <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Center"
                                          ContentSource="Header"/>

                                <!-- Content for the menu IGT(ShortCut key) -->
                                <ContentPresenter Grid.Column="2"
                                          Margin="30,1,5,1"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"                                      
                                          VerticalAlignment="Center"/>

                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" 
                                          Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>

                                <!-- The Popup is the body of the menu which expands 
                                     down or across depending on the level of the item -->
                                <!--<Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource ={RelativeSource TemplatedParent}}" 
                                       Placement="Right" x:Name="SubMenuPopup" Focusable="false" 
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" BorderBrush="Gray"  Background="White"
                                        BorderThickness="1">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            -->
                                <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                <!--
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>-->

                                <!--弹出子集菜单容器-->
                                <Popup x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border Background="{TemplateBinding Background}"  CornerRadius="0" Margin="5" 
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                            >
                                        <!--Add Shadow for the Border-->
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="2" BlurRadius="5" Opacity="0.8"/>
                                        </Border.Effect>

                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>

                            </Grid>
                        </Border>

                        <!-- These triggers re-configure the four arrangements 
                             of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <!--<Setter Property="CornerRadius" Value="5,5,0,0" TargetName="Border"/>-->
                                <!--<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>-->
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>

                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                            </Trigger>

                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                            </Trigger>

                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>

                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                            </Trigger>

                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>

                            <!-- The GlyphPanel contains the CheckMark -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>

                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="#0083D7" TargetName="Border"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <!--Set text color as LightGray when disable-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Separator style for menu-->
        <Style x:Key="MLB_Separator" TargetType="{x:Type Separator}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Grid>
                            <Rectangle Height="1" Stroke="Gray" />
                            <!--<Rectangle Height="1" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />-->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ListView item style: this can control the align in each column -->
        <Style x:Key="ListviewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_DoubleClick"/>
            <EventSetter Event="Selected" Handler="ListViewItem_Selected"/>
        </Style>

        <!--Content layout style when not data-->
        <Style TargetType="Grid" x:Key="ContentLayout_NotData_Style">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Style.Triggers>
                <!--<MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=CurrentWorkingArea,  Converter={StaticResource ContentNotDataConver}}" Value="Visible"/>
                        <Condition Binding="{Binding Path=NxlFileList.Count,  Converter={StaticResource lc2b}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>-->
                <!--<DataTrigger Binding="{Binding Path=NxlFileList.Count,  Converter={StaticResource lc2b}}" Value="false">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>-->
            </Style.Triggers>
        </Style>

        <!--image rotate for refresh-->
        <Style TargetType="{x:Type Button}" x:Key="RefreshRotate">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border Name="Border" BorderBrush="#F5D350" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FDEEB3" Offset="0"/>
                                        <GradientStop Color="#FDE690" Offset="0.3"/>
                                        <GradientStop Color="#FDEEAE" Offset="0.56"/>
                                        <GradientStop Color="#FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>

                            <Ellipse Height="15" Width="15">
                                <Ellipse.Fill>
                                    <ImageBrush  ImageSource="/rmc/resources/icons/Icon_refresh.png"></ImageBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>

                            <Trigger Property="Button.IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform></RotateTransform>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" From="0" To="360" Duration="0:0:0.8" ></DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <!--<EventTrigger RoutedEvent="Button.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" Duration="0:0:0.2"></DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>-->
            </Style.Triggers>
        </Style>

        <!--Upload button-->
        <Style TargetType="Button" x:Key="MouseOverBtnStyleExUpload">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <!-- Border style-->
                            <Border Name="Border" BorderBrush="#F9E080" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FDEEB3" Offset="0"/>
                                        <GradientStop Color="#FDE690" Offset="0.3"/>
                                        <GradientStop Color="#FDEEAE" Offset="0.56"/>
                                        <GradientStop Color="#FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>

                            <!--Content-->
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding IsStartUpload, Converter={StaticResource btnUploadTagConver} }" Stretch="None" Margin="5,0,0,0"/>
                                <TextBlock x:Name="Tb_ProtectFile" Text="{Binding IsStartUpload,Converter={StaticResource btnUploadContentConver}}"  Margin="5,0,5,0" VerticalAlignment="Center"/>
                            </StackPanel>

                        </Grid>

                        <!--Triggers-->
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>

                            <Trigger Property="Button.IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        
    </Window.Resources>

    <!-- Binding the input gusture for menu command-->
    <Window.InputBindings>

        <!--File Menu-->
        <KeyBinding Gesture="Ctrl+O" Command="{Binding MenuCommand}" CommandParameter="Open File"/>
        <KeyBinding Gesture="Ctrl+Shift+P" Command="{Binding MenuCommand}" CommandParameter="Protect File"/>
        <KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding MenuCommand}" CommandParameter="Share File"/>
        <KeyBinding Gesture="Del" Command="{Binding MenuCommand}" CommandParameter="Remove File"/>
        <KeyBinding Gesture="Ctrl+Shift+I" Command="{Binding MenuCommand}" CommandParameter="View File Info"/>
        <KeyBinding Gesture="Ctrl+Shift+W" Command="{Binding MenuCommand}" CommandParameter="Signout"/>
        <KeyBinding Gesture="Ctrl+Shift+Q" Command="{Binding MenuCommand}" CommandParameter="Exit"/>

        <!--View Menu-->
        <KeyBinding Gesture="Left" Command="{Binding MenuCommand}" CommandParameter="Previous"/>
        <KeyBinding Gesture="Right" Command="{Binding MenuCommand}" CommandParameter="Next"/>
        <KeyBinding Gesture="F5" Command="{Binding MenuCommand}" CommandParameter="Refresh Screen"/>

        <!--Help Menu-->
        <KeyBinding Gesture="F1" Command="{Binding MenuCommand}" CommandParameter="Help"/>


    </Window.InputBindings>

    <Border  Margin="0,0,0,5" Background="White">

        <!--root grid-->
        <Grid>
            <!--Control the column ratio-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="53*"/>
                <ColumnDefinition Width="929*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <!--Menu bar-->
                <RowDefinition Height="30"/>
                <!--tool bar-->
                <RowDefinition Height="45"/>
                <!--Working area-->
                <RowDefinition Height="*"/>
                <!--Status bar-->
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <!--Menu bar-->
            <Grid Grid.Row="0" Margin="10,-10,10,0" Grid.ColumnSpan="2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="250"/>
                </Grid.ColumnDefinitions>

                <!--menu items-->
                <Menu Name="windowMenu" Grid.Column="0" VerticalAlignment="Center" Background="White"  >

                    <!--File-->
                    <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_File}" Style="{StaticResource MLB_MenuItem}">

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Open_File}" Style="{StaticResource MLB_MenuItem}"        
                                  InputGestureText="Ctrl+O" Command="{Binding MenuCommand}" CommandParameter="Open File">
                            <MenuItem.IsEnabled>
                                <MultiBinding Converter="{StaticResource MenuitemFileStatusNetworkMultiBindConverter}">
                                    <Binding Path="CurrentSelectedFile"/>
                                    <Binding Path="IsNetworkAvailable"/>
                                </MultiBinding>
                            </MenuItem.IsEnabled>
                        </MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Protect_File}" Style="{StaticResource MLB_MenuItem}" 
                                  InputGestureText="Ctrl+Shift+P" Command="{Binding MenuCommand}" CommandParameter="Protect File">
                        </MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Share_File}" Style="{StaticResource MLB_MenuItem}" 
                                  InputGestureText="Ctrl+Shift+S" 
                                  IsEnabled="{Binding CurrentWorkingArea,Converter={StaticResource ShareBtnIsEnableConver}}"
                                  Command="{Binding MenuCommand}" CommandParameter="Share File"></MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Remove_File}" Style="{StaticResource MLB_MenuItem}" InputGestureText="Del"
                                  IsEnabled="{Binding CurrentSelectedFile,Converter={StaticResource MenuitemRemoveFileStatusConver}}"
                                  Command="{Binding MenuCommand}" CommandParameter="Remove File"></MenuItem>

                        <!--Separator line-->
                        <Separator Style="{StaticResource MLB_Separator}"></Separator>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Stop_Upload}" Style="{StaticResource MLB_MenuItem}"  
                                  IsEnabled="{Binding IsStartUpload,Converter={StaticResource MenuitemStopUploadConver}}"
                                  Command="{Binding MenuCommand}" CommandParameter="Stop Upload"></MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Start_Upload}" Style="{StaticResource MLB_MenuItem}"
                                  IsEnabled="{Binding IsStartUpload,Converter={StaticResource MenuitemStartUploadConver}}"
                                  Command="{Binding MenuCommand}" CommandParameter="Start Upload"></MenuItem>

                        <!--Separator line-->
                        <Separator Style="{StaticResource MLB_Separator}"></Separator>

                        <MenuItem  Name="Menu_ViewFileInfo" Header="{DynamicResource MainWin__windowMenu_Header_View_File_Info}" Style="{StaticResource MLB_MenuItem}" InputGestureText="Ctrl+Shift+I"
                                   Command="{Binding MenuCommand}" CommandParameter="View File Info">
                            <MenuItem.IsEnabled>
                                <MultiBinding Converter="{StaticResource MenuitemFileStatusNetworkMultiBindConverter}">
                                    <Binding Path="CurrentSelectedFile"/>
                                    <Binding Path="IsNetworkAvailable"/>
                                </MultiBinding>
                            </MenuItem.IsEnabled>
                        </MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Activity_Log}" Style="{StaticResource MLB_MenuItem}"
                                  IsEnabled="False"
                                   Command="{Binding MenuCommand}" CommandParameter="Activity Log"></MenuItem>

                        <!--Separator line-->
                        <Separator Style="{StaticResource MLB_Separator}"></Separator>

                        <MenuItem Name="Menu_logout" Header="{DynamicResource MainWin__windowMenu_Header_Log_out}" Style="{StaticResource MLB_MenuItem}" InputGestureText="Ctrl+Shift+W" 
                                   Command="{Binding MenuCommand}" CommandParameter="Signout"></MenuItem>

                        <!--Separator line-->
                        <Separator Style="{StaticResource MLB_Separator}"></Separator>

                        <MenuItem Name="Menu_exit" Header="{DynamicResource MainWin__windowMenu_Header_Exit}" Style="{StaticResource MLB_MenuItem}" InputGestureText="Ctrl+Shift+Q" 
                                  Command="{Binding MenuCommand}" CommandParameter="Exit"></MenuItem>

                    </MenuItem>

                    <!--View-->
                    <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_View}" Style="{StaticResource MLB_MenuItem}" >
                        <!-- Now Remove the two menu item.-->
                        <!--<MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Previous}" Style="{StaticResource MLB_MenuItem}" InputGestureText="&lt;-" 
                                  IsEnabled="{Binding CurrentSelectedFile,Converter={StaticResource MenuitemSelectFileStatusConver}}"
                                  Command="{Binding MenuCommand}" CommandParameter="Previous"></MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Next}" Style="{StaticResource MLB_MenuItem}" InputGestureText="-&gt;" 
                                  IsEnabled="{Binding CurrentSelectedFile,Converter={StaticResource MenuitemSelectFileStatusConver}}"
                                  Command="{Binding MenuCommand}" CommandParameter="Next"></MenuItem>-->

                        <!--Separator line-->
                        <!--<Separator Style="{StaticResource MLB_Separator}"></Separator>-->

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Refresh_Screen}" Style="{StaticResource MLB_MenuItem}" InputGestureText="F5" 
                                  Command="{Binding MenuCommand}" CommandParameter="Refresh Screen"></MenuItem>

                        <!--Separator line-->
                        <Separator Style="{StaticResource MLB_Separator}"></Separator>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Sort_By}" Style="{StaticResource MLB_MenuItem}">
                            <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_File_Name}" Style="{StaticResource MLB_MenuItem}"  Command="{Binding MenuCommand}" CommandParameter="File Name"/>
                            <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Last_Modified}" Style="{StaticResource MLB_MenuItem}"  Command="{Binding MenuCommand}" CommandParameter="Last Modified"/>
                            <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_File_Size}" Style="{StaticResource MLB_MenuItem}"  Command="{Binding MenuCommand}" CommandParameter="File Size"/>
                        </MenuItem>
                    </MenuItem>

                    <!--Prefrences-->
                    <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Preferences}" Style="{StaticResource MLB_MenuItem}"  Command="{Binding MenuCommand}" CommandParameter="Preferences">

                    </MenuItem>

                    <!--Help-->
                    <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Help}" Style="{StaticResource MLB_MenuItem}">

                        <!--Now hide this item-->
                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Getting_Started}" Style="{StaticResource MLB_MenuItem}" Visibility="Collapsed"
                                  Command="{Binding MenuCommand}" CommandParameter="Getting Started"></MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Help2}" Style="{StaticResource MLB_MenuItem}" InputGestureText="F1" 
                                   Command="{Binding MenuCommand}" CommandParameter="Help"></MenuItem>

                        <!--Separator line-->
                        <Separator Style="{StaticResource MLB_Separator}" Visibility="Collapsed"></Separator>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Check_for_Updates}" Style="{StaticResource MLB_MenuItem}" 
                                  Command="{Binding MenuCommand}" CommandParameter="Check For Updates" Visibility="Collapsed"></MenuItem>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_Report_an_issue}" Style="{StaticResource MLB_MenuItem}" Foreground="Red" 
                                   Command="{Binding MenuCommand}" CommandParameter="Report an issue" Visibility="Collapsed"></MenuItem>

                        <!--Separator line-->
                        <Separator Style="{StaticResource MLB_Separator}"></Separator>

                        <MenuItem Header="{DynamicResource MainWin__windowMenu_Header_About_Skydrm_Desktop}" Style="{StaticResource MLB_MenuItem}" 
                                   Command="{Binding MenuCommand}" CommandParameter="About Skydrm Desktop"></MenuItem>
                    </MenuItem>
                </Menu>


                <!--user status-->
                <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="0,0,10,0" HorizontalAlignment="Right">

                    <Grid Margin="3" Height="30" Width="30" >
                        <Ellipse 
                             Stroke="{Binding AvatarBackground}"
                             Fill="{Binding AvatarBackground}">

                        </Ellipse>

                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                               TextAlignment="Center" Text="{Binding AvatarText}" Foreground="{Binding AvatarTextColor}">
                        </TextBlock>

                    </Grid>

                    <StackPanel Margin="10,0,0,0" VerticalAlignment="Center">
                        <TextBlock x:Name="user_name"  FontSize="11"  Text="{Binding UserName}" TextTrimming="CharacterEllipsis" 
                                   FontFamily="Roboto" FontWeight="Bold"
                                   TextWrapping="WrapWithOverflow" MaxWidth="150"/>

                        <TextBlock x:Name="login_status" Margin="0,4,0,0" Text="{Binding IsNetworkAvailable, Converter={StaticResource nsb2ls}}" 
                                   FontFamily="Roboto" FontWeight="Bold"
                                   Foreground="{Binding IsNetworkAvailable, Converter={StaticResource nsb2lc}}" FontSize="9"/>
                    </StackPanel>
                </StackPanel>

            </Grid>

            <!--Horizontal separator line-->
            <Separator Grid.Row="0" Margin="0,29,0,0" Background="LightGray" Grid.ColumnSpan="2"/>

            <!--tool bar-->
            <Grid Grid.Row="1" Grid.ColumnSpan="2">

                <!--Set bg gradient-->
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5, 1">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#EFEFEF" Offset="0.95"/>
                    </LinearGradientBrush>
                </Grid.Background>

                <Grid.ColumnDefinitions>
                    <!--protect-->
                    <ColumnDefinition Width="120"/>
                    <!--share-->
                    <ColumnDefinition Width="120"/>
                    <!--vertical line-->
                    <ColumnDefinition Width="30"/>
                    <!--view select-->
                    <!--if have combox ,the width is "170"-->
                    <!--<ColumnDefinition Width="170"/>-->
                    <ColumnDefinition Width="40"/>
                    <!--search-->
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="*"/>
                    <!--upload-->
                    <ColumnDefinition Width="120"/>
                    <!--vertical line-->
                    <ColumnDefinition Width="5"/>
                    <!--more other-->
                    <ColumnDefinition Width="110"/>
                </Grid.ColumnDefinitions>

                <!--protect a file-->
                <Button x:Name="Protect_File" Grid.Column="0" Margin="10,0,0,0" Height="35"
                        Command="{Binding DelegateCommand }" CommandParameter="Cmd_Protect"
                        Content="{DynamicResource MainWin__Btn_Protect}" Tag="/rmc/resources/icons/Icon_protect.png"
                        Style="{StaticResource ResourceKey=MouseOverBtnStyleEx}"/>

                <!--protect & share-->
                <Button x:Name="Share_File" Grid.Column="1" Height="35"
                        IsEnabled="{Binding CurrentWorkingArea,Converter={StaticResource ShareBtnIsEnableConver}}"
                        Content="{DynamicResource MainWin__Btn_Share}" 
                        Tag="/rmc/resources/icons/Icon_share.png"
                        Command="{Binding DelegateCommand}" CommandParameter="Cmd_Share"
                        Style="{StaticResource ResourceKey=MouseOverBtnStyleEx}"/>

                <!--vertical separator line-->
                <Rectangle Grid.Column="2" Width="0.8" Height="45"  Stroke="Gray" Visibility="Visible"/>


                <!--select itme and refresh-->
                <StackPanel Orientation="Horizontal" Grid.Column="3" Margin="0,0,10,0" Visibility="Visible">

                    <ComboBox Width="130" Height="23" Margin="5,0,0,0" SelectedIndex="0" Visibility="Collapsed">

                        <!--Selection Changed event-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <local_event:MyEventCommand Command="{Binding FilterFilesCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ComboBoxItem Content="{DynamicResource MainWin__Combox_View_All}"></ComboBoxItem>
                        <!--<ComboBoxItem>Available Offline</ComboBoxItem>-->
                        <ComboBoxItem Content="{DynamicResource MainWin__Combox_Waiting_for_Upload}"></ComboBoxItem>
                        <!--<ComboBoxItem>All Online Files</ComboBoxItem>-->
                        <ComboBoxItem Content="{DynamicResource MainWin__Combox_All_Local_Files}"></ComboBoxItem>

                    </ComboBox>

                    <!--btnRefesh-->
                    <Button x:Name="Refresh" Style="{StaticResource RefreshRotate}" 
                             Command="{Binding DelegateCommand }" CommandParameter="Cmd_Refresh"
                             Margin="10,0,0,0" Height="15" Width="15"></Button>

                </StackPanel>

                <!--search-->
                <DockPanel Grid.Column="4" Visibility="{Binding CurrentWorkingArea,Converter={StaticResource SearchComboxVisibilityConver}}">
                    <local_custom:CustomSearchBox x:Name="SearchBox" VerticalAlignment="Center">
                        <!--Command binding for "SearchEvent" event -->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SearchEvent">
                                <local_event:MyEventCommand Command="{Binding SearchCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </local_custom:CustomSearchBox>

                </DockPanel>
                
                <!--upload Folder-->
                <Button x:Name="Upload_Folder" Grid.Column="5" Visibility="Collapsed"
                        HorizontalAlignment="Right" Height="35" VerticalAlignment="Center" Margin="0,0,15,0"
                        Tag="/rmc/resources/icons/Update_Folder.png"
                        Command="{Binding DelegateCommand }" CommandParameter="Cmd_UploadFolder"
                        Content="Update Folder"
                        Style="{StaticResource ResourceKey=MouseOverBtnStyleEx}"/>
                
                <!--upload operate-->
                <Button x:Name="Upload" Grid.Column="6"
                        HorizontalAlignment="Right" Height="35" VerticalAlignment="Center" Margin="0,0,15,0"
                        Command="{Binding DelegateCommand}" CommandParameter="{Binding IsStartUpload,Converter={StaticResource btnUploadCommandConver}}"
                        Style="{StaticResource ResourceKey=MouseOverBtnStyleExUpload}"/>

                <!--vertical separator line-->
                <Rectangle Grid.Column="7" Width="0.8" Height="45"  Stroke="Gray" />

                <!--open Skydrm & Preference -->
                <StackPanel Orientation="Horizontal" Grid.Column="8" HorizontalAlignment="Right" Margin="0,0,15,0">

                    <Button Height="35" 
                            Content="/rmc/resources/icons/browse_web.png"
                            Command="{Binding DelegateCommand}" CommandParameter="Cmd_OpenWeb"
                            ToolTip="{DynamicResource Open_Skydrm_Web}"
                            Style="{StaticResource ResourceKey=MouseOverBtnStyle}"/>

                    <Button Height="35"
                            Command="{Binding DelegateCommand}" CommandParameter="Cmd_Preference"
                            ToolTip="{DynamicResource MainWin__Btn_Preference}"
                            Content="/rmc/resources/icons/preference_menu.png" Visibility="Visible"
                            Style="{StaticResource ResourceKey=MouseOverBtnStyle}" Margin="15,0,0,0"/>

                </StackPanel>

            </Grid>

            <!--Horizontal separator line-->
            <Separator Grid.Row="1" Margin="0,44,0,0" Background="LightGray" Grid.ColumnSpan="2"/>

            <!--Working area: file list-->
            <Grid Grid.Row="2" Grid.ColumnSpan="2">
                
                <Grid>
                    
                    <Grid.ColumnDefinitions>
                        <!--The width can not use 'auto', it will have scrollViewer display question in TreeViewComponent-->
                        <!--<ColumnDefinition Width="170" MinWidth="150" MaxWidth="600"/>
                        <ColumnDefinition Width="3"/>-->
                        <ColumnDefinition Width="{Binding IsDisplayTreeview,Converter={StaticResource WidthConver}}" MaxWidth="600"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="*" MinWidth="600"/>
                    </Grid.ColumnDefinitions>
                    
                    <!--TreeView-->
                    <Grid Grid.Column="0" Visibility="{Binding IsDisplayTreeview,Converter={StaticResource VisibilityConver}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="10"></RowDefinition>
                                <RowDefinition Height="150"></RowDefinition>
                            </Grid.RowDefinitions>

                            <ScrollViewer x:Name="TreeView_Scroll" Margin="0,0,0,5" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                <Tree_View:TreeViewComponent x:Name="UserControl_TreeView" Grid.Row="0" TransmitItemEvent="TreeViewItem_Selected"></Tree_View:TreeViewComponent>
                            </ScrollViewer>
                            
                            <!--Filters-->
                            <DockPanel Grid.Row="1" Height="10"  HorizontalAlignment="Stretch" >
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="40"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Line Grid.Column="0" HorizontalAlignment="Left" Margin="0,5,2,2" X1="0" Y1="0" X2="500" Y2="0" Stroke="#BDBDBD" StrokeThickness="8"/>
                                    <TextBlock Grid.Column="1" VerticalAlignment="Center" LineHeight="10" Foreground="#BDBDBD">FILTERS</TextBlock>
                                    <Line Grid.Column="2" HorizontalAlignment="Right" Margin="2,5,0,2" X1="0" Y1="0" X2="500" Y2="0" Stroke="#BDBDBD" StrokeThickness="8"/>
                                </Grid>

                            </DockPanel>

                            <!--Offlien and OutBox-->
                            <StackPanel Grid.Row="2" Margin="0,0,0,0">
                                <!--<Button x:Name="BtnOffline" Margin="0,15,0,0"  VerticalAlignment="Center"
                                           Height="30" HorizontalContentAlignment="Left"
                                           Tag="/rmc/resources/icons/Offline.png"
                                           Content="All Offline Files" FontSize="11.88" FontFamily="Roboto"
                                            Command="{Binding DelegateCommand }" CommandParameter="Cmd_OfflineFiles"
                                           Style="{StaticResource ResourceKey=ProjectBtnStyle}"></Button>-->

                                <!--<Button x:Name="BtnOutbox" Margin="0,0,0,0"  VerticalAlignment="Center"
                                           HorizontalContentAlignment="Left" Height="30"
                                           Tag="/rmc/resources/icons/Outbox.png"
                                           Content="Outbox" FontSize="11.88" FontFamily="Roboto"
                                            Command="{Binding DelegateCommand }" CommandParameter="Cmd_OutBox"
                                           Style="{StaticResource ResourceKey=ProjectBtnStyle}">
                                    </Button>-->
                                <Button x:Name="BtnOffline" Margin="0,15,0,0"
                                            HorizontalContentAlignment="Left"
                                            Height="30" Background="Transparent" 
                                            BorderBrush="Transparent" BorderThickness="0"
                                            FontSize="11.88" FontFamily="Roboto"
                                            Command="{Binding DelegateCommand }" CommandParameter="Cmd_OfflineFiles">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Stretch="None" Margin="15,0,0,0" Source="/rmc/resources/icons/Offline.png" />
                                        <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{DynamicResource MainWin__Btn_AllOfflineFile}"></TextBlock>
                                    </StackPanel>
                                </Button>

                                <Button x:Name="BtnOutbox" Margin="0,0,0,0"  VerticalAlignment="Center"
                                           HorizontalContentAlignment="Left"
                                            Height="30" Background="Transparent" 
                                            BorderBrush="Transparent" BorderThickness="0"
                                            FontSize="11.88" FontFamily="Roboto"
                                            Command="{Binding DelegateCommand }" CommandParameter="Cmd_OutBox">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Stretch="None" Margin="15,0,0,0" Source="/rmc/resources/icons/Outbox.png" />
                                        <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{DynamicResource MainWin__Btn_OutBox}"></TextBlock>
                                    </StackPanel>
                                </Button>
                            </StackPanel>

                        </Grid>
                        
                    </Grid>


                    <GridSplitter Grid.Column="1"  HorizontalAlignment="Stretch" Opacity="0.5" Visibility="{Binding IsDisplayTreeview,Converter={StaticResource VisibilityConver}}"></GridSplitter>
                    
                    <!--ListView-->
                    <Grid Grid.Column="2">
                        <DockPanel LastChildFill="True">
                            <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Height="40" Background="#399749" Visibility="{ Binding IsNetworkAvailable, Converter={StaticResource NeteWork2VisibilityConver}}">
                                <TextBlock Margin="0,2,0,0" TextAlignment="Center" FontSize="15" Foreground="White" FontWeight="Bold" Text="{DynamicResource MainWin_Network_PromptTitle}"></TextBlock>
                                <TextBlock TextAlignment="Center" FontSize="12" Foreground="White" Text="{DynamicResource MainWin_Network_PromptTitle2}"></TextBlock>
                            </StackPanel>
                            
                            <Grid DockPanel.Dock="Top">
                                <!--实现Grid的宽度按比例-->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="400"/>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition Width="*"/>
                                        <!--fix bug 49872 Avoid moving the selectitem left and right-->
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" x:Name="col_name"/>
                                    <Grid Grid.Column="1" x:Name="col_fileLocation"/>
                                    <Grid Grid.Column="2" x:Name="col_dateModified"/>
                                    <Grid Grid.Column="3" x:Name="col_size"/>
                                    <Grid Grid.Column="4" x:Name="col_sharedWith"/>
                                </Grid>

                                <ListView x:Name="fileList" BorderThickness="0" ext:ListViewBehavior.HeaderSort="True"   Visibility="{Binding CurrentWorkingArea,Converter={StaticResource ListViewVisibilityConver}}"
                                                 ItemsSource="{Binding NxlFileList}"
                                                 ItemContainerStyle="{DynamicResource ListviewItemStyle}"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                                 SelectionMode="Single"
                                                 list_view:ListViewLayoutManager.Enabled="True">

                                    <ListView.View >

                                        <GridView x:Name="gridView">
                                            <!--Note: Binding and SortField must be "NxlFile.Name" instead of "Name"-->
                                            <GridViewColumn Width="{Binding ElementName=col_name, Path=ActualWidth}"
                                            CellTemplate="{StaticResource nameTemplate}"
                                            ext:ListViewBehavior.SortField="Name"
                                            list_view:RangeColumn.MinWidth="150">
                                                <GridViewColumnHeader x:Name="ColumnHeader_Name" Content="{DynamicResource MainWin__ListView_Name}" 
                                            Height="25"  HorizontalContentAlignment="Left" Padding="8,0,0,0"/>
                                            </GridViewColumn>

                                            <GridViewColumn Width="{Binding ElementName=col_fileLocation, Path=ActualWidth}" 
                                            DisplayMemberBinding="{Binding Path=Location, Converter={StaticResource FileLocationConentConverter}}"
                                            ext:ListViewBehavior.SortField="Location"
                                            list_view:RangeColumn.MinWidth="70"
                                            list_view:RangeColumn.MaxWidth="150">
                                        <GridViewColumnHeader x:Name="ColumnHeader_Location" Content="{DynamicResource MainWin__ListView_Location}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                    </GridViewColumn>
                                    
                                            <GridViewColumn Width="{Binding ElementName=col_dateModified, Path=ActualWidth}"
                                            DisplayMemberBinding="{Binding Path=DateModified, Converter={StaticResource TimestampToDateTime}}"
                                            ext:ListViewBehavior.SortField="DateModified"
                                            list_view:RangeColumn.MinWidth="100"
                                            list_view:RangeColumn.MaxWidth="200">
                                                <GridViewColumnHeader x:Name="ColumnHeader_DateModified" Content="{Binding CurrentWorkingArea, Converter={StaticResource IsDisplayDateColConver}}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                            <!--Note: Binding and SortField must be "NxlFile.Size" instead of "Size"-->
                                            <GridViewColumn Width="{Binding ElementName=col_size, Path=ActualWidth}" 
                                            DisplayMemberBinding="{Binding Path=Size, Converter={StaticResource rfsc}}"
                                            ext:ListViewBehavior.SortField="Size"
                                            list_view:RangeColumn.MinWidth="70"
                                            list_view:RangeColumn.MaxWidth="150">
                                                <GridViewColumnHeader x:Name="ColumnHeader_Size" Content="{DynamicResource MainWin__ListView_Size}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                            <GridViewColumn Width="{Binding ElementName=col_sharedWith, Path=ActualWidth}"
                                            ext:ListViewBehavior.SortField="SharedWith"
                                            CellTemplate="{StaticResource sharedWithTemplate}"
                                            list_view:RangeColumn.MinWidth="150">
                                                <GridViewColumnHeader x:Name="ColumnHeader_SharedWith" Content="{Binding CurrentWorkingArea, Converter={StaticResource IsDisplayShareColConver}}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                        </GridView>
                                    </ListView.View>

                                </ListView>


                                <!--Filter_ListView-->
                                <ListView x:Name="Filter_fileList" BorderThickness="0" ext:ListViewBehavior.HeaderSort="True" Visibility="{Binding CurrentWorkingArea,Converter={StaticResource FilterListVisibilityConver}}"
                                                 ItemsSource="{Binding NxlFileList}"
                                                 ItemContainerStyle="{DynamicResource ListviewItemStyle}"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                                 SelectionMode="Single"
                                                 list_view:ListViewLayoutManager.Enabled="True">

                                    <ListView.View >

                                        <GridView x:Name="Filter_gridView">
                                            <!--Note: Binding and SortField must be "NxlFile.Name" instead of "Name"-->
                                            <GridViewColumn Width="{Binding ElementName=col_name, Path=ActualWidth}"
                                            CellTemplate="{StaticResource FilternameTemplate}"
                                            ext:ListViewBehavior.SortField="Name"
                                            list_view:RangeColumn.MinWidth="150">
                                                <GridViewColumnHeader x:Name="Filter_ColumnHeader_Name" Content="{DynamicResource MainWin__ListView_Name}" 
                                            Height="25"  HorizontalContentAlignment="Left" Padding="8,0,0,0"/>
                                            </GridViewColumn>

                                            <GridViewColumn Width="{Binding ElementName=col_fileLocation, Path=ActualWidth}" 
                                            DisplayMemberBinding="{Binding Path=Location, Converter={StaticResource FileLocationConentConverter}}"
                                            ext:ListViewBehavior.SortField="Location"
                                            list_view:RangeColumn.MinWidth="70"
                                            list_view:RangeColumn.MaxWidth="150">
                                        <GridViewColumnHeader x:Name="Filter_ColumnHeader_Location" Content="{DynamicResource MainWin__ListView_Location}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                    </GridViewColumn>

                                    <GridViewColumn Width="{Binding ElementName=col_dateModified, Path=ActualWidth}"
                                            DisplayMemberBinding="{Binding Path=DateModified, Converter={StaticResource TimestampToDateTime}}"
                                            ext:ListViewBehavior.SortField="DateModified"
                                            list_view:RangeColumn.MinWidth="100"
                                            list_view:RangeColumn.MaxWidth="200">
                                                <GridViewColumnHeader x:Name="Filter_ColumnHeader_DateModified" Content="{DynamicResource MainWin__ListView_Date_modified}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                            <!--Note: Binding and SortField must be "NxlFile.Size" instead of "Size"-->
                                            <GridViewColumn Width="{Binding ElementName=col_size, Path=ActualWidth}" 
                                            DisplayMemberBinding="{Binding Path=Size, Converter={StaticResource rfsc}}"
                                            ext:ListViewBehavior.SortField="Size"
                                            list_view:RangeColumn.MinWidth="70"
                                            list_view:RangeColumn.MaxWidth="150">
                                                <GridViewColumnHeader x:Name="Filter_ColumnHeader_Size" Content="{DynamicResource MainWin__ListView_Size}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                            <GridViewColumn Width="{Binding ElementName=col_sharedWith, Path=ActualWidth}" 
                                            ext:ListViewBehavior.SortField="SharedWith"
                                            CellTemplate="{StaticResource sharedWithTemplate}"
                                            list_view:RangeColumn.MinWidth="150">
                                                <GridViewColumnHeader x:Name="Filter_ColumnHeader_SharedWith" Content="{Binding CurrentWorkingArea, Converter={StaticResource IsDisplayShareColConver}}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                        </GridView>
                                    </ListView.View>

                                </ListView>
                                
                                
                                <!--SelectProject UI-->
                                <ListView Name="ProjectListBox" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                         Visibility="{Binding CurrentWorkingArea,Converter={StaticResource DisplayProjectLixBoxConver}}"
                                         MouseDoubleClick="ListProjectItem_DoubleClick"
                                          list_view:ListViewLayoutManager.Enabled="True">
                                    <!--<ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel  Orientation="Horizontal"  Background="Transparent" />
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderBrush="#FFEAE8E8" BorderThickness="1" CornerRadius="1" Margin="20">
                                                <StackPanel Orientation="Vertical" Background="White"  Width="260" Height="auto" MinHeight="120">
                                                    <Border>
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,4" EndPoint="1,-0.5">
                                                                <GradientStop Color="White" Offset="0"/>
                                                                <GradientStop Color="#FFF6FFF8" Offset="0.7"/>
                                                                <GradientStop Color="#FFD6F3DB" Offset="0.9"/>
                                                                <GradientStop Color="#FFD9ECDD" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <StackPanel>
                                                            <TextBlock Margin="20,10,0,0" TextWrapping="Wrap" FontSize="18" Foreground="#34994C" LineHeight="22" Text="{Binding ProjectInfo.DisplayName}"/>
                                                            <TextBlock Margin="20,5,0,0" Height="40" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" FontSize="13" Foreground="#6E6E6E" LineHeight="11" Text="{Binding ProjectInfo.Description}"/>
                                                        </StackPanel>
                                                    </Border>
                                                    -->
                                    <!--Separator line-->
                                    <!--
                                                    <Separator Background="#BDBDBD"></Separator>
                                                    <TextBlock Margin="20,10,0,10" TextWrapping="Wrap" FontSize="14" Foreground="#000000" LineHeight="13" FontFamily="Lato" FontWeight="Regular" Text="{Binding FileNodes.Count,  StringFormat={}{0} Files}"/>
                                                </StackPanel>
                                            </Border>

                                        </DataTemplate>
                                    </ListView.ItemTemplate>-->
                                    <ListView.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.ContainerStyle>
                                                <Style TargetType="{x:Type GroupItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                <Expander IsExpanded="True" ExpandDirection="Down" Margin="15,15,0,0">
                                                                    <Expander.Header>
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Foreground="#6E6E6E" FontSize="17" LineHeight="22" Text="{Binding Path=Name, Converter={StaticResource ProjectGroupNameConver}}" VerticalAlignment="Center" />
                                                                            <TextBlock FontWeight="DemiBold" FontSize="17" LineHeight="22" Text="{Binding Path=Name, Converter={StaticResource ProjectGroupName2Conver}}" VerticalAlignment="Center"/>
                                                                            <TextBlock Foreground="#6E6E6E" FontSize="17" LineHeight="22" Text="{Binding Path=ItemCount, StringFormat=({0})}"  VerticalAlignment="Center" Margin="5,0,0,0" />
                                                                        </StackPanel>
                                                                    </Expander.Header>
                                                                    <ItemsPresenter />
                                                                </Expander>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </GroupStyle.ContainerStyle>
                                        </GroupStyle>
                                    </ListView.GroupStyle>

                                    <ListView.View >

                                        <GridView x:Name="ProjectPage_gridView">
                                            <!--Note: Binding and SortField must be "NxlFile.Name" instead of "Name"-->
                                            <GridViewColumn Width="300"
                                                CellTemplate="{StaticResource ProjectPageNameTemplate}"
                                                list_view:RangeColumn.MinWidth="100">
                                                <GridViewColumnHeader x:Name="ProjectPage_ColumnHeader_Name" Content="{DynamicResource MainWin__ListView_Name}" 
                                                Height="25"  HorizontalContentAlignment="Left" Padding="8,0,0,0"/>
                                            </GridViewColumn>

                                            <GridViewColumn Width="300" 
                                                CellTemplate="{StaticResource ProjectPageDescriptionTemplate}"                                                         
                                                list_view:RangeColumn.MinWidth="200">
                                                <GridViewColumnHeader x:Name="ProjectPage_ColumnHeader_ProjectDes" Content="{DynamicResource MainWin__ProjectListView_Description}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                            <GridViewColumn Width="{Binding ElementName=col_dateModified, Path=ActualWidth}"
                                                CellTemplate="{StaticResource ProjectPageFileNumberTemplate}"
                                                list_view:RangeColumn.MinWidth="100"
                                                list_view:RangeColumn.MaxWidth="200">
                                                <GridViewColumnHeader x:Name="ProjectPage_ColumnHeader_DateModified" Content="{DynamicResource MainWin__ProjectListView_FileNumber}" 
                                                      HorizontalContentAlignment="Left" Padding="8,0,0,0" />
                                            </GridViewColumn>

                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                
                                
                                <!--The loading Page-->
                                <Grid  x:Name="Loading_Page" Visibility="{Binding IsInitializing, Converter={StaticResource LoadingPageConver}}">
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image Source="/rmc/resources/icons/BigAppIcon.png" Width="125"></Image>
                                        <local_custom:ProBarComponent2 Margin="0,5,0,5" Width="200"></local_custom:ProBarComponent2>
                                        <TextBlock FontSize="16" LineHeight="17" Text="{DynamicResource MainWin_LoadingPage_Text}"></TextBlock>
                                    </StackPanel>
                                </Grid>

                                <!--The prompt text-->
                                <!--<TextBlock x:Name="promptText" TextAlignment="Center" Foreground="Gray" Margin="20, 30,0,0">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource PromptVisibilityConver}">
                                            <Binding Path="CurrentWorkingArea" />
                                            <Binding Path="IsInitializing" />
                                            <Binding Path="NxlFileList.Count" />
                                            <Binding Path="CopyFileList.Count" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource PromptTextConver}">
                                            <Binding Path="CurrentWorkingArea" />
                                            <Binding Path="IsInitializing" />
                                            <Binding Path="NxlFileList.Count" />
                                            <Binding Path="CopyFileList.Count" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>-->
                                <TextBlock x:Name="searchPromptText" Text="{DynamicResource MainWin__Search_Text}" TextAlignment="Center" Foreground="Gray" Margin="20, 30,0,0">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource SearchPromptVisibilityConver}">
                                            <Binding Path="IsSearch" />
                                            <Binding Path="NxlFileList.Count" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                                
                                <!--Display Empty Folder-->
                                <StackPanel x:Name="emptyFolder" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel.Visibility>
                                        <MultiBinding Converter="{StaticResource EmptyFolderVisibilityConver}">
                                            <Binding Path="CurrentWorkingArea" />
                                            <Binding Path="IsInitializing" />
                                            <Binding Path="NxlFileList.Count" />
                                            <Binding Path="CopyFileList.Count" />
                                            <Binding Path="CollectionProjectCount"/>
                                        </MultiBinding>
                                    </StackPanel.Visibility>
                                    <Image Stretch="Uniform" Width="100" Height="80" Source="/rmc/resources/icons/folder-green-empty.png" Visibility="{Binding IsDataLoading,Converter={StaticResource EmptyImageVisibilityConver}}"></Image>
                                    <TextBlock Margin="0,20,0,0" FontSize="16" LineHeight="17" FontWeight="Medium" Foreground="Gray" Text="{Binding IsDataLoading,Converter={StaticResource EmptyFolderTextConver}}"></TextBlock>
                                </StackPanel>

                                <!--The Layout when not data-->
                                <!--<Grid x:Name="ContentLayout_NotData" Style="{StaticResource ContentLayout_NotData_Style}" Visibility="Collapsed">-->
                                <Grid x:Name="ContentLayout_NotData" >
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{StaticResource ContentNotDataConver}">
                                            <Binding Path="CurrentWorkingArea" />
                                            <Binding Path="NxlFileList.Count" />
                                            <Binding Path="CopyFileList.Count" />
                                        </MultiBinding>
                                    </Grid.Visibility>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Text="This folder is empty" Foreground="Gray" Margin="20, 20,0,0" Visibility="Collapsed"/>

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <!--Protect file-->
                                        <StackPanel Width="320" Height="300" Background="#F0F1F4" >
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="70"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <Image x:Name="protect_img" Grid.Row="0" Source="/rmc/resources/icons/home_protect_file_0.5x.png" Width="120" Height="150"/>
                                                <TextBlock Grid.Row="0" Text="{DynamicResource MainWin__Text_Title_Protect}" Height="20" Background="White" Opacity="0.8" Width="200"  Padding="70,0,0,0" FontSize="14"/>

                                                <TextBlock Grid.Row="1" HorizontalAlignment="Center" Margin="20,10,20,0" Foreground="Gray" TextWrapping="Wrap" TextAlignment="Center" FontSize="13">
                                        <Run Text="{DynamicResource MainWin__Text_Prompt_Protect}"/>&#160;<Run Foreground="#0079D8" Text="{DynamicResource MainWin__Text_Prompt_MyVault_Protect}"/>
                                                </TextBlock>

                                                <Button Grid.Row="2" Content="{DynamicResource MainWin__Text_Btn_Protect}" Padding="0,0,0,20" Margin="0,20,0,0" Height="35"
                                         Command="{Binding DelegateCommand }" CommandParameter="Cmd_Protect"
                                            Style="{StaticResource UnifiedBtnStyle_Positive}" FontSize="13"/>
                                            </Grid>
                                        </StackPanel>

                                        <!--Share file-->
                                        <StackPanel Width="320" Height="300" Background="#F0F1F4" Margin="10,0,0,0">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="70"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <Image Grid.Row="0" Source="/rmc/resources/icons/home_share_file.png" Height="150"/>
                                                <TextBlock Grid.Row="0" Text="{DynamicResource MainWin__Text_Title_Share}"  Height="20" Background="White" Opacity="0.8" Width="200"  Padding="45,0,0,0" FontSize="14"/>

                                                <TextBlock Grid.Row="1" HorizontalAlignment="Center" Margin="20,10,20,0" Foreground="Gray" TextWrapping="Wrap" TextAlignment="Center" FontSize="13">
                                          <Run Text="{DynamicResource MainWin__Text_Prompt_Share}"/>
                                                </TextBlock>

                                                <Button Grid.Row="2" Content="{DynamicResource MainWin__Text_Btn_Share}" Padding="0,0,0,20" Margin="0,20,0,0" Height="35"
                                         Command="{Binding DelegateCommand}" CommandParameter="Cmd_Share"
                                            Style="{StaticResource UnifiedBtnStyle_Positive}" FontSize="13"/>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>

                                </Grid>
                            </Grid>
                            
                        </DockPanel>
                        

                    </Grid>
                                      
                    
                </Grid>
                
            </Grid>

            <!--status bar-->
            <Grid Grid.Row="3" Background="#F0F0F0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <!--item count-->
                    <ColumnDefinition Width="120"/>
                    <!--upload progressbar-->
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="*"/>
                    <!--upload schedule-->
                    <ColumnDefinition Width="205"/>
                    <!--vertical separator line-->
                    <ColumnDefinition Width="20"/>
                    <!--network status-->
                    <ColumnDefinition Width="160"/>
                </Grid.ColumnDefinitions>

                <!--item count-->
                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding Path=NxlFileList.Count}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Path=NxlFileList.Count,Converter={StaticResource ItemConver}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>

                <!--upload progressbar-->
                <!--<StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="0,5,0,0">
                    <ProgressBar  Height="6" Value="20"/>
                    <DockPanel >
                        <TextBlock Text="544 MB used" FontSize="10" Foreground="Gray" HorizontalAlignment="Left"/>
                        <TextBlock Text="990 MB free" HorizontalAlignment="Right"/>
                    </DockPanel>
                </StackPanel>-->

                <!--upload schedule-->
                <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <TextBlock Text="{DynamicResource MainWin__UploadSchedule}" Foreground="Gray"/>
                    <TextBlock Text="{DynamicResource MainWin__UploadSchedule_Auto}" Margin="10,0,0,0"/>
                    <TextBlock Text="{DynamicResource MainWin__UploadSchedule_Change}" Margin="8,0,0,0" Foreground="#70A7F3" Visibility="Collapsed"/>
                </StackPanel>
                <!--vertical separator line-->
                <Rectangle Grid.Column="4" Width="0.8" Height="20"  Stroke="Gray" />

                <!--network status-->
                <StackPanel Grid.Column="5" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="{DynamicResource MainWin__Network_Status}" Foreground="Gray"/>
                    <TextBlock Text="{Binding IsNetworkAvailable, Converter= {StaticResource nsb2s}}" Foreground="Gray" Margin="10,0,0,0"/>
                    <Image Source="{Binding IsNetworkAvailable, Converter={StaticResource nsb2i}}" Stretch="None" Margin="10,0,0,0"/>
                </StackPanel>
            </Grid>


        </Grid>

    </Border>

</local:CustomMainWindow>
