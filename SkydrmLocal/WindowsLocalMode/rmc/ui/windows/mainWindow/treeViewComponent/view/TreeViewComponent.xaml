<UserControl x:Class="SkydrmLocal.rmc.ui.windows.mainWindow.treeViewComponent.view.TreeViewComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SkydrmLocal.rmc.ui.windows.mainWindow.treeViewComponent.viewModel"
             xmlns:local_helper="clr-namespace:SkydrmLocal.rmc.ui.windows.mainWindow.treeViewComponent.helper"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="120">

    <UserControl.Resources>
        <local_helper:RootIconConverter  x:Key="RootIconConverter"/>
        <local_helper:ProjectIconConverter  x:Key="ProIconConverter"/>

        <Style  x:Key="DefaultTreeViewItem" TargetType="{x:Type TreeViewItem}">
            <Setter Property="MinHeight" Value="25" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="IsEnabled" Value="{Binding IsEnable, Mode=TwoWay}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <local_helper:IndentConverter  x:Key="indentConverter"/>
                        </ControlTemplate.Resources>
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Name="itemBackground" Background="{TemplateBinding Background}"  
                                BorderBrush="{TemplateBinding BorderBrush}"  
                                BorderThickness="{TemplateBinding BorderThickness}"  
                                Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent">
                                    <Grid x:Name="ItemRoot" Margin="{Binding Converter={StaticResource indentConverter},RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton x:Name="Expander" HorizontalAlignment="Left" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Width" Value="16"/>
                                                    <Setter Property="Height" Value="16"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                                                    <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,6" Stroke="#66645e">
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="225" CenterY="3" CenterX="3"/>
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="315" CenterY="3" CenterX="3"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <!--<Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>-->
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsChecked" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                                                                    </MultiTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header"  
                                                 HorizontalAlignment="Stretch"/>
                                        
                                    </Grid>
                                </Grid>

                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!--<DataTrigger Binding="{Binding IsGrouping}" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </DataTrigger>-->
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>

                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="itemBackground" Value="#FF9FD9FD"/>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"/>
                                    <Condition SourceName="itemBackground" Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#D0E7F9" TargetName="itemBackground"/>
                            </MultiTrigger>

                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"/>
                                    <Condition Property="IsSelected" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#FFDCD7D7" TargetName="itemBackground"/>
                            </MultiTrigger>-->

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultTreeView" TargetType="{x:Type TreeView}">
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTreeViewItem}"></Setter>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Vertical">

            <!--TreeView-->
            <TreeView x:Name="treeView" ItemsSource="{Binding Roots}" BorderThickness="0" Background="Transparent" Margin="2,2,2,2"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    TreeViewItem.Selected="TreeViewItem_Selected"
                    Style="{StaticResource DefaultTreeView}">
                <TreeView.Resources>

                    <HierarchicalDataTemplate  DataType="{x:Type local:RootViewModel}"  ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Margin="3,3,5,3" Source="{Binding RootName,Converter={StaticResource RootIconConverter}}" />
                            <TextBlock FontSize="11.88" FontFamily="Roboto" LineHeight="14" VerticalAlignment="Center" Text="{Binding RootName}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate  DataType="{x:Type local:ProjectViewModel}"  ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Margin="3,3,5,3" Source="{Binding ProjectIsCreateByMe,Converter={StaticResource ProIconConverter}}" />
                            <TextBlock FontSize="11" FontFamily="Roboto" LineHeight="12" VerticalAlignment="Center" Text="{Binding ProjectName}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type local:FolderViewModel}" ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Margin="3,3,5,3" Source="/rmc/ui/windows/mainWindow/treeViewComponent/Images/Folder.png" />
                            <TextBlock FontSize="11" FontFamily="Roboto" LineHeight="12" VerticalAlignment="Center" Text="{Binding FolderName}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>

                </TreeView.Resources>

            </TreeView>

            <!--Separate space-->
            <StackPanel Height="50">

            </StackPanel>

        </StackPanel>


    </Grid>

</UserControl>
