<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SkydrmLocal">
    <local:UriToBitmapImageConverter x:Key="uri2Image"></local:UriToBitmapImageConverter>
    
    <!--Change the image Scale-->
    <Style x:Key="YellowButton" >
        <Setter Property="Button.Template">
            <Setter.Value>

                <ControlTemplate>
                    <Grid>
                        <Border Name="Border" BorderBrush="#F5D350" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#FDEEB3" Offset="0"/>
                                    <GradientStop Color="#FDE690" Offset="0.3"/>
                                    <GradientStop Color="#FDEEAE" Offset="0.56"/>
                                    <GradientStop Color="#FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                        </Border>
                        <Image Stretch="None" Source="{TemplateBinding Button.Content, Converter={StaticResource uri2Image}}" RenderTransformOrigin="0.5,0.5"  >
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    <SkewTransform/>
                                    <RotateTransform/>                
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>

                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Extend that not changing the image scale-->
    <Style x:Key="MouseOverBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Button.Template">
            <Setter.Value>

                <ControlTemplate>
                  
                    <Grid>
                        <!-- Border style-->
                        <Border Name="Border" BorderBrush="#F9E080" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#FDEEB3" Offset="0"/>
                                    <GradientStop Color="#FDE690" Offset="0.3"/>
                                    <GradientStop Color="#FDEEAE" Offset="0.56"/>
                                    <GradientStop Color="#FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                        </Border>
                        
                        <Image Stretch="Uniform" Source="{TemplateBinding Button.Content, Converter={StaticResource uri2Image}}" Margin="5,0,5,0"/>

                    </Grid>

                    <!--Triggers-->
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>

                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Extend Button that contains image & text, and not changing the image scale-->
    <Style TargetType="Button" x:Key="MouseOverBtnStyleEx">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <!-- Border style-->
                        <Border Name="Border" BorderBrush="#F9E080" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#FDEEB3" Offset="0"/>
                                    <GradientStop Color="#FDE690" Offset="0.3"/>
                                    <GradientStop Color="#FDEEAE" Offset="0.56"/>
                                    <GradientStop Color="#FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <!--Content-->
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{TemplateBinding Button.Tag}" Stretch="None" Margin="5,0,0,0"/>
                            <TextBlock x:Name="tb" Text="{TemplateBinding Button.Content}" Margin="5,0,5,0" VerticalAlignment="Center"/>
                        </StackPanel>

                    </Grid>

                    <!--Triggers-->
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>

                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>

                        <Trigger Property="Button.IsEnabled" Value="false">
                            <Setter TargetName="tb" Property="Foreground" Value="gray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--For offline and outbox Button-->
    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#E9FFF5"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#E9FFF5"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#C6EEDC"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#C6EEDC"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="FilterBtnStyle" TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>