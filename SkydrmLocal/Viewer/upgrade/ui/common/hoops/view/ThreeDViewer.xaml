<Page x:Class="Viewer.upgrade.ui.common.hoops.view.ThreeDViewer"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
      DataContext="{Binding RelativeSource={RelativeSource Self}}"
      mc:Ignorable="d" 
      Loaded="Page_Loaded" 
      Title="ThreeDViewer">

    <DockPanel>
        <!--Ribbon-->
        <ribbon:Ribbon x:Name="Ribbon" DockPanel.Dock="Top" Loaded="Ribbon_Loaded">
            <!--Menu-->
            <ribbon:Ribbon.ApplicationMenu>

                <!--Now hide the menu-->
                <ribbon:RibbonApplicationMenu SmallImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/ts3d.ico" Visibility="Collapsed">

                    <ribbon:RibbonApplicationMenu.AuxiliaryPaneContent>
                        <ribbon:RibbonGallery>
                            <ribbon:RibbonGalleryCategory Header="Recently Opened Files" Background="Transparent" x:Name="RecentFiles">
                                <ribbon:RibbonGalleryCategory.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                    </ItemsPanelTemplate>
                                </ribbon:RibbonGalleryCategory.ItemsPanel>
                            </ribbon:RibbonGalleryCategory>
                        </ribbon:RibbonGallery>
                    </ribbon:RibbonApplicationMenu.AuxiliaryPaneContent>
                    <!--Only using Open-->
                    <ribbon:RibbonApplicationMenuItem Header="_Open" Command="{Binding FileOpenCommand}" ImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/LargeIcon.png" />

                </ribbon:RibbonApplicationMenu>

            </ribbon:Ribbon.ApplicationMenu>

            <!--Ribbon Tab-->
            <ribbon:RibbonTab Header="Operators" d:IsHidden ="True">

                <!--Navigation-->
                <ribbon:RibbonGroup Header="Navigation" d:IsHidden ="True">

                    <!--Group size definition-->
                    <ribbon:RibbonGroup.GroupSizeDefinitions>
                        <ribbon:RibbonGroupSizeDefinition>
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True"/>
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                        </ribbon:RibbonGroupSizeDefinition>
                    </ribbon:RibbonGroup.GroupSizeDefinitions>

                    <!-- 4 buttons-->
                    <ribbon:RibbonToggleButton Command="{Binding OrbitCommand}" IsChecked="{Binding IsCurrentOpOrbit, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/IconOrbit.png" Label="Orbit"/>
                    <ribbon:RibbonToggleButton Command="{Binding PanCommand}" IsChecked="{Binding IsCurrentOpPan, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/IconPan.png" Label="Pan"/>
                    <ribbon:RibbonToggleButton Command="{Binding ZoomAreaCommand}" IsChecked="{Binding IsCurrentOpZoomArea, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/IconZoomArea.png" Label="Zoom Area"/>
                    <ribbon:RibbonToggleButton Command="{Binding FlyCommand}" IsChecked="{Binding IsCurrentOpFly, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/paper_plane.png" Label="Fly"/>

                </ribbon:RibbonGroup>

                <!--No title-->
                <ribbon:RibbonGroup d:IsHidden="True">

                    <ribbon:RibbonGroup.GroupSizeDefinitions>
                        <ribbon:RibbonGroupSizeDefinition>
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                        </ribbon:RibbonGroupSizeDefinition>
                    </ribbon:RibbonGroup.GroupSizeDefinitions>

                    <!--2 button-->
                    <ribbon:RibbonButton Command="{Binding HomeCommand}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/IconHome.png" Label="Home" />
                    <ribbon:RibbonButton Command="{Binding ZoomFitCommand}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/IconZoomFit.png" Label="Zoom Fit" />
                </ribbon:RibbonGroup>

                <!--Selection-->
                <ribbon:RibbonGroup Header="Selection" d:IsHidden="True">

                    <ribbon:RibbonGroup.GroupSizeDefinitions>
                        <ribbon:RibbonGroupSizeDefinition>
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                        </ribbon:RibbonGroupSizeDefinition>
                    </ribbon:RibbonGroup.GroupSizeDefinitions>

                    <!--2 button-->
                    <ribbon:RibbonToggleButton Command="{Binding PointSelectCommand}" IsChecked="{Binding IsCurrentOpSelectPoint, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/IconSelectPoint.png" Label="Point" />
                    <ribbon:RibbonToggleButton Command="{Binding AreaSelectCommand}" IsChecked="{Binding IsCurrentOpSelectArea, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/IconSelectArea.png" Label="Area" />

                </ribbon:RibbonGroup>

            </ribbon:RibbonTab>

            <!--Modes-->
            <ribbon:RibbonTab Header="Modes">
                <ribbon:RibbonGroup Header="Modes">

                    <ribbon:RibbonGroup.GroupSizeDefinitions>
                        <ribbon:RibbonGroupSizeDefinition>
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                            <ribbon:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                        </ribbon:RibbonGroupSizeDefinition>
                    </ribbon:RibbonGroup.GroupSizeDefinitions>

                    <!--4 button-->
                    <ribbon:RibbonToggleButton Command="{Binding SimpleShadowModeCommand}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/LargeIcon.png" Label="Simple Shadow" />
                    <ribbon:RibbonToggleButton x:Name="FrameRateButton" Command="{Binding FrameRateModeCommand}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/LargeIcon.png" Label="Frame Rate" />
                    <ribbon:RibbonToggleButton x:Name="SmoothButton" Command="{Binding SmoothModeCommand}" IsChecked="{Binding IsSmooth, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/LargeIcon.png" Label="Smooth" />
                    <ribbon:RibbonToggleButton x:Name="HiddenLineButton" Command="{Binding HiddenLineModeCommand}" IsChecked="{Binding IsHidden, Mode=TwoWay}" LargeImageSource="pack://application:,,,/upgrade/ui/common/hoops/images/LargeIcon.png" Label="Hidden Line" />
                </ribbon:RibbonGroup>
            </ribbon:RibbonTab>

        </ribbon:Ribbon>

        <!--Canvas browser layout-->
        <Grid Name="_canvasBrowserGrid">

            <!-- Canvas panel for Content-->
            <Grid Name="_canvasPanel"  HorizontalAlignment="Stretch" Background="#FFDFE9F5">
                <Border x:Name="_mainBorder" Margin="5" BorderThickness="2" BorderBrush="Black"/>
            </Grid>

        </Grid>

    </DockPanel>
</Page>
