add log4net to project:


add in Properties-> AssemblyInfo.cs
	// Let log4net know that it can look for configuration in the default application config file
	[assembly: log4net.Config.XmlConfigurator(Watch = true)]

add in App.config
  // add in <configuration> ->  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net"/>

  // impl <log4net> in config xml
  	<log4net>
      <!--output to local log file-->
      <appender name="LogFileAppender"  type="log4net.Appender.RollingFileAppender" >
        <param name="File" value="${LOCALAPPDATA}\Nextlabs\SkyDRM\log\Viewer.log" />
        <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
        <appendToFile value="true" />
        <rollingStyle value="Size" />
        <encoding value="utf-8" />
        <maxSizeRollBackups value="10" />
        <maximumFileSize value="5MB" />
        <staticLogFileName value="true" />-->
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date %-6level[%thread] -%type.%method:%newline%message%newline" />
        </layout>
      </appender>
      <!--output to console file-->
      <appender name="LogConsoleAppender" type="log4net.Appender.ConsoleAppender">
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
        </layout>
      </appender>
      <root>
        <level value="All" />
        <!-- If the following line is not included the log file 
        will not be created even if log4net is configured with this file. -->
        <appender-ref ref="LogFileAppender" />
        <appender-ref ref="LogConsoleAppender" />
      </root>
    </log4net>

	// change value="${LOCALAPPDATA}\Nextlabs\SkyDRM\log\Viewer.log"

in app.cs:
		add static 
	// every other class object can directly use this avoid creating a same one
        private static readonly log4net.ILog log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);